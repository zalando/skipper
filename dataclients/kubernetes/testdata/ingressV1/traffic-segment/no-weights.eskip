kube_namespace1__ingress1__test1_example_org____service1v1: Host("^(test1[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0, 0.25) -> <roundRobin, "http://42.0.1.2:8080", "http://42.0.1.3:8080">;
kube_namespace1__ingress1__test1_example_org____service1v2: Host("^(test1[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0.25, 0.5) -> <roundRobin, "http://42.0.1.4:8080", "http://42.0.1.5:8080">;
kube_namespace1__ingress1__test1_example_org____service1v3: Host("^(test1[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0.5, 0.75) -> <roundRobin, "http://42.0.1.6:8080", "http://42.0.1.7:8080">;
kube_namespace1__ingress1__test1_example_org____service1v4: Host("^(test1[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0.75, 1) -> <roundRobin, "http://42.0.1.8:8080", "http://42.0.1.9:8080">;

kube_namespace1__ingress2__test2_example_org____service1v1: Host("^(test2[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0, 0.3333333333333333) -> <roundRobin, "http://42.0.1.2:8080", "http://42.0.1.3:8080">;
kube_namespace1__ingress2__test2_example_org____service1v3: Host("^(test2[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0.3333333333333333, 0.6666666666666666) -> <roundRobin, "http://42.0.1.6:8080", "http://42.0.1.7:8080">;
kube_namespace1__ingress2__test2_example_org____service1v4: Host("^(test2[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0.6666666666666666, 1) -> <roundRobin, "http://42.0.1.8:8080", "http://42.0.1.9:8080">;

kube_namespace1__ingress3__test3_example_org____service1v1: Host("^(test3[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0, 0.3333333333333333) -> <roundRobin, "http://42.0.1.2:8080", "http://42.0.1.3:8080">;
kube_namespace1__ingress3__test3_example_org____service1v3: Host("^(test3[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0.3333333333333333, 0.6666666666666666) -> <roundRobin, "http://42.0.1.6:8080", "http://42.0.1.7:8080">;
kube_namespace1__ingress3__test3_example_org____service1v4: Host("^(test3[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0.6666666666666666, 1) -> <roundRobin, "http://42.0.1.8:8080", "http://42.0.1.9:8080">;

kube_namespace1__ingress4__test4_example_org____service1v1: Host("^(test4[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0, 0.5) -> <roundRobin, "http://42.0.1.2:8080", "http://42.0.1.3:8080">;
kube_namespace1__ingress4__test4_example_org____service1v4: Host("^(test4[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0.5, 1) -> <roundRobin, "http://42.0.1.8:8080", "http://42.0.1.9:8080">;

kube_namespace1__ingress5__test5_example_org____service1v1: Host("^(test5[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0, 0.5) -> <roundRobin, "http://42.0.1.2:8080", "http://42.0.1.3:8080">;
kube_namespace1__ingress5__test5_example_org____service1v4: Host("^(test5[.]example[.]org[.]?(:[0-9]+)?)$") && TrafficSegment(0.5, 1) -> <roundRobin, "http://42.0.1.8:8080", "http://42.0.1.9:8080">;

kube_namespace1__ingress6__test6_example_org____service1v1: Host("^(test6[.]example[.]org[.]?(:[0-9]+)?)$") -> <roundRobin, "http://42.0.1.2:8080", "http://42.0.1.3:8080">;
