version: "2017-09-20"
allow_concurrent_steps: true
pipeline:
- id: vulncheck
  depends_on: []
  vm_config:
    type: linux
    image: "cdp-runtime/go"
  type: script
  when:
    branch: master
    event: push
  commands:
  - desc: vuln-check
    cmd: |
      make deps govulncheck
- id: build
  depends_on: []
  vm_config:
    type: linux
    image: "cdp-runtime/go"
  type: script
  commands:
  - desc: Setup BuildKit
    cmd: |
      # create a Buildkit builder with CDP specific configuration (https://cloud.docs.zalando.net/howtos/cdp-multiarch/)
      docker buildx create --config /etc/cdp-buildkitd.toml --driver-opt network=host --bootstrap --use
  - desc: build-push
    cmd: |
      set -eo pipefail

      IMAGE_REGISTRY="registry-write.opensource.zalan.do"
      MULTIARCH_REGISTRY="container-registry-test.zalando.net"

      if [[ $CDP_TARGET_BRANCH == master && ! $CDP_PULL_REQUEST_NUMBER ]]; then
        LATEST_VERSION=$(git describe --tags --always | awk -F \- '{print $1}')
        CUR_PART=$(echo $LATEST_VERSION | awk -F . '{print $1"."$2}')
        VERSION_PART=$(cat VERSION)
        OLD_PATCH=$(echo $LATEST_VERSION | awk -F . '{print $3}')
        NEW_PATCH=$((OLD_PATCH + 1))
        if [ "$CUR_PART" != "$VERSION_PART" ]; then NEW_PATCH=0; fi
        RELEASE_VERSION=${VERSION_PART}.${NEW_PATCH}
        export VERSION="${RELEASE_VERSION}"

        IMAGE="${IMAGE_REGISTRY}/teapot/skipper:${RELEASE_VERSION}"
        MULTIARCH_IMAGE="${MULTIARCH_REGISTRY}/teapot/skipper:${RELEASE_VERSION}"
      else
        IMAGE="${IMAGE_REGISTRY}/teapot/skipper-test:${CDP_BUILD_VERSION}"
        MULTIARCH_IMAGE="${MULTIARCH_REGISTRY}/teapot/skipper-test:${CDP_BUILD_VERSION}"
      fi
      export IMAGE MULTIARCH_IMAGE

      make deps cicheck staticcheck gosec

      if [[ $CDP_TARGET_BRANCH == master && ! $CDP_PULL_REQUEST_NUMBER ]]; then
        echo "Creating git tag: ${RELEASE_VERSION}"
        git gh-tag "${RELEASE_VERSION}"
      fi

      git status
      git diff

      cd packaging

      make docker.build.amd64 && git status && git diff && make docker.push.amd64 && make docker.push.multiarch

      if [[ $CDP_TARGET_BRANCH == master && ! $CDP_PULL_REQUEST_NUMBER ]]; then
        echo "Created docker image registry.opensource.zalan.do/teapot/skipper:${RELEASE_VERSION}"

        cdp-promote-image "${MULTIARCH_IMAGE}"
        echo "Created multi-arch docker image container-registry.zalando.net/teapot/skipper:${RELEASE_VERSION}"

        echo "Creating release for tag: ${RELEASE_VERSION}"
        make build.package

        files=(-u sha256sum.txt); for f in *.tar.gz; do files+=(-u "$f"); done
        echo "create release page"
        tf=$(mktemp)
        echo -e "### Changes\n" >$tf
        git log -1 --pretty=%B | grep -v 'Signed-off-by:' | grep -v -E '^\s*$' | grep -vE '^\*' >>$tf
        echo -e "\n### Multiarch Docker image\n" >>$tf
        echo -e "Multiarch Docker image is available in Github's docker registry:\n" >>$tf
        echo -e '```' >>$tf
        echo -e "docker run -it ghcr.io/zalando/skipper:${RELEASE_VERSION} skipper --help" >>$tf
        echo -e '```' >>$tf
        echo -e "\n### Docker image\n" >>$tf
        echo -e "Docker image is available in Zalando's Open Source registry:\n" >>$tf
        echo -e '```' >>$tf
        echo -e "docker run -it registry.opensource.zalan.do/teapot/skipper:${RELEASE_VERSION} skipper --help" >>$tf
        echo -e '```' >>$tf
        echo "################################"
        cat $tf
        echo "################################"
        git gh-release --message-from-file "${tf}" "${files[@]}" "$RELEASE_VERSION"
      else
        echo "Created docker image registry.opensource.zalan.do/teapot/skipper-test:${CDP_BUILD_VERSION}"
        echo "Created multi-arch docker image container-registry-test.zalando.net/teapot/skipper-test:${CDP_BUILD_VERSION}"
        echo "Not creating a release. No release version defined."
      fi
- id: docs
  depends_on: [build]
  type: script
  overlay: ci/python
  commands:
  - desc: install deps
    cmd: |
      pip3 install mkdocs mkdocs-material markdown-include
  - desc: build docs
    cmd: |
      mkdocs build --strict
      shopt -s extglob  # needed to use !(pr)
      if [ "$CDP_PULL_REQUEST_NUMBER" ]; then
        mkdir -p site/pr/#{CDP_PULL_REQUEST_NUMBER}
        mv site/!(pr) site/pr/#{CDP_PULL_REQUEST_NUMBER}
      fi
      if [[ $CDP_TARGET_BRANCH == master && ! $CDP_PULL_REQUEST_NUMBER ]]; then
        echo "Please update the docs with: mkdocs gh-deploy"
      fi
  artifacts:
  - type: docs
    name: skipper
    path: site
